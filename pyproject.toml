[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "surrealdb"
version = "1.0.5"
description = "SurrealDB python client"
readme = "README.md"
authors = [{ name = "SurrealDB" }]
license = "Apache-2.0"
keywords = ["SurrealDB", "Database"]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database",
    "Topic :: Database :: Front-Ends",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "aiohttp>=3.8.0",
    "cerberus>=1.3.0",
    "requests>=2.25.0",
    "typing_extensions>=4.0.0; python_version<'3.12'",
    "websockets>=10.0",
]

[project.urls]
homepage = "https://github.com/surrealdb/surrealdb.py"
repository = "https://github.com/surrealdb/surrealdb.py"
documentation = "https://surrealdb.com/docs/sdk/python"

[tool.hatch.build.targets.wheel]
packages = ["src/surrealdb"]

[tool.hatch.build.targets.sdist]
include = ["/src", "/tests", "/README.md", "/LICENSE"]

[tool.ruff]
exclude = ["src/surrealdb/__init__.py"]

[tool.ruff.lint]
select = [
    "I",  # isort
    "UP", # pyupgrade
]

[tool.mypy]
mypy_path = "src"
explicit_package_bases = true
disable_error_code = [
    "return-value",
    "var-annotated",
    "assignment",
    "arg-type",
    "attr-defined",
]

[[tool.mypy.overrides]]
module = "cerberus.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiohttp.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "websockets.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
filterwarnings = [
    "ignore::pytest.PytestUnraisableExceptionWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    { include-group = "test" },
    "mypy>=1.0.0",
    "ruff>=0.12.0",
    "types-requests>=2.25.0",   # Type stubs for requests
]
test = [
    "coverage>=7.0.0",
    "hypothesis>=6.135.16",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]
